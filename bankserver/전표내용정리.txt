1. 클라 요청
2. 큐 진입
3. 차례가 오면 tsinfo를 배당
4. 전표내용 처리
5. 로그 기록

모든 전표는 생성과 동시에 고유 시드를 받음

[송수금 / 출금] 요청 시 전표 구조::
byte단위
1. 2바이트 : 프로토콜 버전 ..0
2. 1바이트 : 요청 종류 [ 1 : 송수금 , 2 : 출금] ..2
3. 26바이트 + 16바이트 : 수신자 고유번호 ..3
4. 26바이트 + 16바이트 : 송신자 or 대상자 고유번호 ..45
5. 32바이트 : 송금 / 출금 일 경우 : 금액 ..87
6. chrono::time_point<system_clock> 8바이트 : 요청 일시 ..119
7. uint32_t : 거래 요청 위치 ..127
8. 종료 문자 ..159

[입출금] 요청 전표
1. 송수금과 동일
2. 송수금과 동일
3. 26바이트 + 16바이트 : 요청자 고유번호 ..3
4. 32바이트 : 금액 ..45
5. chrono::time_point<system_clock> 8바이트 : 요청일시 ...77
6. uint32_t : 거래 요청 위치 ..85
7. 종료 문자 ..117

[단일거래] 진행 순서 
1.클라측 : 거래 요청 [ 거래자 csp, 위치, 시간 전송 ]

-----요청 패킷-----
SGMK + 거래자 csp, 위치, 시간 
1-2 : ---큐진입---
2.서버측 : 거래 요청자 csp번호 확인 [ csp 조회 및확인후, 트랜잭션 번호 전송 ]
이 후 모든 패킷 헤더시작에 트랜잭션 번호를 삽입하여 전송
클라 ~요청 전표 전송
서버 ~응답 전표 전송

3. 이후 통신 종료

세션은 매개변수 expire_time 을 가지며 해당 시간 이후(단위 : 초) 자동 소멸자 호출
